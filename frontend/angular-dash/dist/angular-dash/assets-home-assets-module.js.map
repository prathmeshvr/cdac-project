{"version":3,"sources":["../../src/compat/add/observable/interval.ts","../../src/compat/add/operator/startWith.ts","../../src/compat/add/operator/switchMap.ts","../src/compat/operator/startWith.ts","../src/compat/operator/switchMap.ts","../../src/add/observable/interval.ts","../../src/add/operator/startWith.ts","../../src/add/operator/switchMap.ts","./src/app/assets-home/assets-home/assets-home.component.ts","./src/app/assets-home/assets-home/assets-home.component.html","./src/app/assets-home/assets-routing.module.ts","./src/app/assets-home/assets.module.ts"],"names":[],"mappings":"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","file":"assets-home-assets-module.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.interval = rxjs_1.interval;\n//# sourceMappingURL=interval.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar startWith_1 = require(\"../../operator/startWith\");\nrxjs_1.Observable.prototype.startWith = startWith_1.startWith;\n//# sourceMappingURL=startWith.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar switchMap_1 = require(\"../../operator/switchMap\");\nrxjs_1.Observable.prototype.switchMap = switchMap_1.switchMap;\n//# sourceMappingURL=switchMap.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits the items you specify as arguments before it begins to emit\n * items emitted by the source Observable.\n *\n * <img src=\"./img/startWith.png\" width=\"100%\">\n *\n * @param {...T} values - Items you want the modified Observable to emit first.\n * @param {Scheduler} [scheduler] - A {@link IScheduler} to use for scheduling\n * the emissions of the `next` notifications.\n * @return {Observable} An Observable that emits the items in the specified Iterable and then emits the items\n * emitted by the source Observable.\n * @method startWith\n * @owner Observable\n */\nfunction startWith() {\n    var array = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        array[_i] = arguments[_i];\n    }\n    return operators_1.startWith.apply(void 0, array)(this);\n}\nexports.startWith = startWith;\n//# sourceMappingURL=startWith.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switch}.</span>\n *\n * <img src=\"./img/switchMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switch}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method switchMap\n * @owner Observable\n */\nfunction switchMap(project) {\n    return operators_1.switchMap(project)(this);\n}\nexports.switchMap = switchMap;\n//# sourceMappingURL=switchMap.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"rxjs-compat/add/observable/interval\");\n//# sourceMappingURL=interval.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"rxjs-compat/add/operator/startWith\");\n//# sourceMappingURL=startWith.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"rxjs-compat/add/operator/switchMap\");\n//# sourceMappingURL=switchMap.js.map","import { Component, OnInit ,OnDestroy} from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n// import { NGXLogger } from 'ngx-logger';\nimport 'rxjs/add/observable/interval';\nimport 'rxjs/add/operator/startWith';\nimport 'rxjs/add/operator/switchMap';\nimport { AuthenticationService } from 'src/app/core/services/auth.service';\nimport { NotificationService } from 'src/app/core/services/notification.service';\n// import * as mqtt from \"mqtt\";\n// import { IMqttMessage, MqttService } from 'ngx-mqtt';\n// import { EventDataModel } from 'app/models/event.model';\nimport { Subscription } from 'rxjs';\nimport { EChartOption } from 'echarts';\nimport { Observable } from 'rxjs';\n// import { MqttClientService } from '../../../app/core/services/mqtt-client.service';\n// import { IMqttMessage } from \"ngx-mqtt\";\n\n\n// import { Subscription } from 'rxjs';\n// import { IMqttMessage, MqttService } from 'ngx-mqtt';\n\n\nexport interface PeriodicElement {\n  name: string;\n  position: string;\n  weight: string;\n  symbol: string;\n}\n\n interface parametersModel{\n  _id:string;\n  parameterName: string,\n  parameterImgUrl: string,\n  parameterType: string,\n  parameterValue: string\n  marked: boolean;\n  theCheckbox:any ;\n\n}\n\ninterface assetData{\n  bValue:boolean;\n  value:number;\n  time:string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 'emoji_objects', name: 'Bulb', weight: 'On', symbol: '1hr 2min'},\n  {position: 'support', name: 'Fan', weight: 'On', symbol: '2'},\n  {position: 'wb_iridescent', name: 'Tube Light', weight: \"On\", symbol: '3'},\n  {position: 'ac_unit', name: 'A.C.', weight: 'On', symbol: '4'}\n];\n\nexport interface ButtonState {\n  marked:boolean;\n  theCheckbox:any;\n}\n\n\nexport interface Graphs {\n  name:string,\n  type:string,\n  option:any\n}\n\n@Component({\n  selector: 'app-assets-home',\n  templateUrl: './assets-home.component.html',\n  styleUrls: ['./assets-home.component.css']\n})\n\nexport class AssetsHomeComponent implements OnInit   {\n  // @Input() products$: Observable<any>;\n  \n  events: any[];\n  private deviceId: string;\n  // subscription: Subscription;\n  graphs:Graphs[];\n  selectedItemsList = [];\n  checkedIDs = [];\n\n  checkboxesDataList = [\n    {            \n      _id: \"5f29a156cb34af8a5803f76e\",\n      parameterName: \"Tubelight\",\n      parameterImgUrl: \"xxxxx\",\n      parameterType: \"SWITCH&MONI\",\n      parameterValue: \"1\",\n      isChecked: true\n    },\n    {\n      _id: 'C001',\n      parameterName: 'Photography',\n      parameterImgUrl: \"xxxxx\",\n      parameterType: \"SWITCH&MONI\",\n      parameterValue: \"1\",\n      isChecked: true\n    },\n    {\n      _id: 'C002',\n      parameterName: 'Writing',\n      parameterImgUrl: \"xxxxx\",\n      parameterType: \"SWITCH&MONI\",\n      parameterValue: \"1\",\n      isChecked: true\n    },\n    {\n      _id: 'C003',\n      parameterName: 'Painting',\n      parameterImgUrl: \"xxxxx\",\n      parameterType: \"SWITCH&MONI\",\n      parameterValue: \"1\",\n      isChecked: true\n    },\n    {\n      _id: 'C004',\n      parameterName: 'Knitting',\n      parameterImgUrl: \"xxxxx\",\n      parameterType: \"SWITCH&MONI\",\n      parameterValue: \"1\",\n      isChecked: false\n    },\n    {\n      _id: 'C004',\n      parameterName: 'Dancing',\n      parameterImgUrl: \"xxxxx\",\n      parameterType: \"SWITCH&MONI\",\n      parameterValue: \"1\",\n      isChecked: false\n    }\n  ]\n\n  mergeOption: any;\n  loading = false;\n  theme='dark'\n  graphOption: Observable<EChartOption>;\n  private subscription: Subscription;\n  // private message: String;\n  topicname: any;\n  msg: any;\n\n  marked;\n  theCheckbox ;\n  public message: string;\n  isConnected: boolean = false;\n  currentUser: any;\n  myData:any;\n  // sampleValue:assetModel[];\n  parametersData: parametersModel[] =[]\n  pdata: parametersModel ;\n  sampleAssetModel=[]\n  gridColumns = 7;\n  butonState: ButtonState[]=[]\n  \n  // valueBtns:[];\n\n  toggleVisibility(e,i){\n    // this.marked= e.target.checked;\n    console.log(JSON.stringify(e))\n    // this.butonState[i].marked=e;\n    console.log(\"button=\" ,this.butonState[i].marked,\"  \",e.target.checked)\n  }\n\n  toggleGridColumns() {\n    this.gridColumns = this.gridColumns === 3 ? 4 : 3;\n  }\n\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  dataSource = ELEMENT_DATA;\n\n\n\n  constructor(private notificationService: NotificationService,\n    private authService: AuthenticationService,\n    private titleService: Title,\n    // private logger: NGXLogger,\n    // private readonly mqttClient: MqttClientService\n    \n    ) {\n      \n\n\n\n    \n\n  }\n\n  // ngOnDestroy(): void {\n  //   this.subscription.unsubscribe();\n  // }\n\n\n  \n\n  changeSelection(event,i) {\n    console.log(\"Button \",i,\"switchinggg = \",this.sampleAssetModel[i].isChecked)\n    this.setParamValue(i)\n    this.fetchSelectedItems()\n\n  }\n\n  fetchSelectedItems() {\n    this.selectedItemsList = this.sampleAssetModel.filter((value, index) => {\n      // console.log(\"Button Switched = \",value.isChecked)\n      return value.isChecked\n    });\n  }\n\n  fetchCheckedIDs() {\n    this.checkedIDs = []\n    this.sampleAssetModel.forEach((value, index) => {\n      if (value.isChecked) {\n        this.checkedIDs.push(value._id);\n        // console.log(\"Button Switching= \",value.isChecked)\n      }\n    });\n  }\n\n  async getDefaultAnalytics()\n  {\n    var id = this.authService.getAssetIdForParameter();\n      var rData=[];\n      await this.authService.getAnalytics(id)\n        .subscribe(\n          data => {\n            console.log(JSON.stringify(data))\n          //   rData=data.response.parameters\n            rData=data.data\n            // console.log(\"hi there\",JSON.stringify(rData))\n            let i=0;\n            this.graphs=rData\n            // var keys = Object.keys(rData);\n            // for (var k = 0; k < keys.length; k++) {\n            //   // console.log(\"hi\")\n            //   this.graphs[k].option=rData[keys[k]]\n            //   this.graphs[k].name=keys[k]\n            //   // console.log(rData[keys[k]]);\n            // }\n            // for(let k=0;k<Object.keys(data.data).length;k++){\n            //   this.graphs[k].option=rData[]\n            // }\n            \n            // console.log(\"hi there amigos\",JSON.stringify(this.sampleAssetModel))\n  \n            \n          },\n          error => {\n            this.notificationService.openSnackBar(error.error);\n          }\n        );\n  \n        \n  \n  }\n\n  ngOnInit():void {\n    this.titleService.setTitle('IoT Platform');\n    // this.logger.log('Dashboard loaded');\n    // this.subscribeToTopic();\n    this.getParameters()\n    this.getDefaultAnalytics();\n    // this.fetchSelectedItems()\n    // this.fetchCheckedIDs()\n\n  }\n\n  // ngOnDestroy(): void {\n  //   if (this.subscription) {\n  //       this.subscription.unsubscribe();\n  //   }\n  // }\n\n  // private subscribeToTopic() {\n  //   this.subscription = this.mqttClient.topic(\"tota\")\n  //       .subscribe((data: IMqttMessage) => {\n  //           let item = JSON.parse(data.payload.toString());\n  //           this.events.push(item);\n  //       });\n  // }\n\n  async setParamValue(i){\n     var id =await this.authService.getAssetIdForParameter();\n    console.log(\"hi222222 \");\n    console.log(this.sampleAssetModel[i]._id);\n    var val;\n    if(this.sampleAssetModel[i].isChecked === true){\n      val='1'\n    }else if(this.sampleAssetModel[i].isChecked === false){\n      val='0'\n    }\n    var _data={\n      timestamp:160000,\n      cmd:\"DEVICE_CONTROL\",\n      data:{\n          assetId:id,\n          parameterId:this.sampleAssetModel[i]._id,\n          value:val\n      }\n    }\n\n    console.log(JSON.stringify(_data))\n  \n    await this.authService.setParamValue(_data)\n      .subscribe(\n        data => {\n          console.log(data)\n          // this.sampleAssetModel=data.parameters\n          console.log(data)\n        },\n        error => {\n          // this.notificationService.openSnackBar(error.error);\n        }\n      );\n  }\n\n  async fillParams(sentData){\n    var mydata ;\n    let i=0;\n    // await console.log(\"len\",sentData)\n    // await console.log(\"hiiii\")\n    // for(i=0;i=sentData.length;i++){\n    //   mydata._id=sentData[i]._id;;\n    //   mydata.parameterName=sentData[i].parameterName\n    //   mydata.parameterImgUrl=sentData[i].parameterImgUrl;\n    //   mydata.parameterType=sentData[i].parameterType;\n    //   mydata.parameterValue=sentData[i].parameterValue\n\n\n    //   console.log(\"hiiii\")\n      if(sentData[i].parameterValue === \"1\"){\n        mydata.marked=true\n        mydata.theCheckbox=true\n      }else if(sentData[i].parameterValue === \"0\"){\n        mydata.marked=false\n        mydata.theCheckbox=false\n      }else if(sentData[i].parameterValue === \" \"){\n        mydata.marked=false\n        mydata.theCheckbox=false\n      }\n      \n      this.butonState.push(mydata)\n    }\n       \n    // await console.log(\"hola\",this.parametersData)\n\n  \n\n  async getParameters() {\n    var user = this.authService.getCurrentUser();\n    var id = this.authService.getAssetIdForParameter();\n\n    await this.authService.getSpecificAssetParameters(Date.now(),id)\n      .subscribe(\n        data => {\n          console.log(JSON.stringify(data))\n          // rData=data.response.parameters\n          this.sampleAssetModel=data.data\n        \n          console.log(\"hi there amigos\",JSON.stringify(this.sampleAssetModel))\n\n          \n        },\n        error => {\n          this.notificationService.openSnackBar(error.error);\n        }\n      );\n\n      \n\n  }\n\n\n  \n}\n","<div class=\"heading\"><h1>Assets</h1></div>\n\n<!-- <div class=\"content\" fxLayout=\"row wrap\" fxLayoutGap=\"16px grid\" >\n    <div [fxFlex]=\"(100/gridColumns) + '%'\" fxFlex.xs=\"100%\" fxFlex.sm=\"33%\"  *ngFor=\"let item of sampleAssetModel;let i = index;\">\n      \n      <mat-card class=\"mat-elevation-z4\" >\n        <mat-card-header>\n      \n          <mat-card-title>{{item.parameterName}}</mat-card-title>\n        </mat-card-header>\n      \n        <mat-card-content>\n        \n          \n          <div fxLayout=\"column\" fxLayoutAlign=\"none center\" >\n         \n            <div class=\"power-switch\">\n              <input type=\"checkbox\" name=\"\" id=\"\" [(ngModel)]=\"item.isChecked\" (change)=\"changeSelection($event,i)\">\n              \n              <div class=\"button\">\n                <svg class=\"power-off\">\n                  <use xlink:href=\"#line\" class=\"line\" />\n                  <use xlink:href=\"#circle\" class=\"circle\" />\n                </svg>\n                <svg class=\"power-on\">\n                  <use xlink:href=\"#line\" class=\"line\" />\n                  <use xlink:href=\"#circle\" class=\"circle\" />\n                </svg>\n              </div>\n            </div>\n\n            <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"display: none;\">\n              <symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 150 150\" id=\"line\">\n                <line x1=\"75\" y1=\"34\" x2=\"75\" y2=\"58\"/>\n              </symbol>\n              <symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 150 150\" id=\"circle\">\n                <circle cx=\"75\" cy=\"80\" r=\"35\"/>\n              </symbol>\n            </svg>\n\n            <h5 id=\"assetStatus\" *ngIf=\"!item.isChecked\">{{item.parameterName}} Off</h5>\n            <h5 id=\"assetStatus\" *ngIf=\"item.isChecked\">{{item.parameterName}} On</h5>\n            \n          </div>\n        </mat-card-content>\n        <mat-card-actions>\n          \n        </mat-card-actions>\n      </mat-card>\n    </div>\n</div> -->\n\n\n  <!-- scheduling details -->\n<!-- <div class=\"content\" fxLayout=\"row\" fxLayoutAlign=\"space-around none\" fxLayoutGap=\"16px grid\">\n  <div  fxFlex>\n    <div class=\"heading\"><h1>Total Active Appliances</h1></div>\n    \n  </div>\n\n  <div fxFlex=\"70%\">\n    <div class=\"heading\"><h1>Schedule</h1></div>\n    <div class=\"content\" fxLayout=\"row\" fxLayoutAlign=\"space-around none\" fxLayoutGap=\"16px grid\">\n      <div fxFlex>\n        <mat-card class=\"mat-elevation-z4\" >\n          <mat-card-content>\n            <div fxLayout=\"column\" fxLayoutAlign=\"none center\" >\n              <h2>Total Active Schedule</h2>\n              <h4>10/15</h4>\n              \n            </div>\n          </mat-card-content>\n          <mat-card-actions>\n            \n          </mat-card-actions>\n        </mat-card>\n      </div>\n      <div fxFlex>\n        <mat-card class=\"mat-elevation-z4\" >\n          <mat-card-content>\n            <div fxLayout=\"column\" fxLayoutAlign=\"none center\" >\n              <h2>Add Schedule</h2>\n              <button mat-fab color=\"accent\" aria-label=\"Example icon button with a bookmark icon\">\n                <mat-icon>add</mat-icon>\n              </button>\n              \n            </div>\n          </mat-card-content>\n          <mat-card-actions>\n            \n          </mat-card-actions>\n        </mat-card>\n      </div>\n  </div>\n  </div>\n</div> -->\n\n\n<!-- all parameters -->\n\n<!-- <div class=\"heading\"><h1>Details</h1></div> -->\n  \n<!-- <div class=\"content\" fxLayout=\"row\" fxLayoutAlign=\"space-around none\" fxLayoutGap=\"16px grid\">\n  <div  fxFlex>\n    <mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n    \n      <ng-container matColumnDef=\"position\">\n        <mat-header-cell *matHeaderCellDef> Device </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> <mat-icon>{{element.position}}</mat-icon> </mat-cell>\n      </ng-container>\n    \n    \n      <ng-container matColumnDef=\"name\">\n        <mat-header-cell *matHeaderCellDef> Appliances </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\n      </ng-container>\n    \n     \n      <ng-container matColumnDef=\"weight\">\n        <mat-header-cell *matHeaderCellDef> Status </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.weight}} </mat-cell>\n      </ng-container>\n    \n      \n      <ng-container matColumnDef=\"symbol\">\n        <mat-header-cell *matHeaderCellDef> Today's On Hours </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.symbol}} </mat-cell>\n      </ng-container>\n    \n      <mat-header-row *matHeaderRowDef=\"displayedColumns\" color='warn'></mat-header-row>\n      <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n    </mat-table>\n  </div>\n  <div fxFlex>\n    <mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n      \n      <ng-container matColumnDef=\"position\">\n        <mat-header-cell *matHeaderCellDef> Device </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> <mat-icon>{{element.position}}</mat-icon> </mat-cell>\n      </ng-container>\n    \n      \n      <ng-container matColumnDef=\"name\">\n        <mat-header-cell *matHeaderCellDef> Appliances </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\n      </ng-container>\n    \n      \n      <ng-container matColumnDef=\"weight\">\n        <mat-header-cell *matHeaderCellDef> Status </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.weight}} </mat-cell>\n      </ng-container>\n    \n      \n      <ng-container matColumnDef=\"symbol\">\n        <mat-header-cell *matHeaderCellDef> Today's On Hours </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.symbol}} </mat-cell>\n      </ng-container>\n    \n      <mat-header-row *matHeaderRowDef=\"displayedColumns\" color='warn'></mat-header-row>\n      <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n    </mat-table>\n  </div>\n</div> -->\n\n\n \n\n  <!-- <div class=\"heart-rate\">\n    <svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"50px\" height=\"20px\" viewBox=\"0 0 150 73\" enable-background=\"new 0 0 150 73\" xml:space=\"preserve\">\n      <polyline fill=\"none\" stroke=\"#009B9E\" stroke-width=\"3\" stroke-miterlimit=\"10\" points=\"0,45.486 38.514,45.486 44.595,33.324 50.676,45.486 57.771,45.486 62.838,55.622 71.959,9 80.067,63.729 84.122,45.486 97.297,45.486 103.379,40.419 110.473,45.486 150,45.486\"\n      />\n    </svg>\n    <div class=\"fade-in\"></div>\n    <div class=\"fade-out\"></div>\n  </div> -->\n\n\n\n  <div class=\"content\" fxLayout=\"row wrap\" fxLayoutGap=\"20px grid\">\n    <div [fxFlex]=\"(100/gridColumns) + '%'\" fxFlex.xs=\"100%\" fxFlex.sm=\"33%\" *ngFor=\"let asset of sampleAssetModel;let i = index\">\n      <mat-card  id=\"button-card\"  >\n        \n        <h4 >{{sampleAssetModel[i].name}}</h4>\n        <h4 >{{sampleAssetModel[i].value}}</h4>\n        \n        <!-- <img src={{sampleAssetModel[i].assetImg}} style=\"width:50px;height:50px;\"> -->\n      </mat-card>\n    </div>\n\n  </div>\n\n  <div class=\"content\">\n    <div  fxLayout=\"column\" fxLayoutGap=\"20px\" *ngFor=\"let graph of graphs; let i = index\">\n        \n        <div fxLayoutAlign=\"space-between center\" >\n            <h1 class =\"main_title\">{{graph.name }}</h1>\n            <!-- <mat-select placeholder=\"Duration\"  size=\"2\" class=\"main_bar\" (selectionChange)=\"valPrint($event.value,i)\">\n                <mat-option *ngFor=\"let t of types\" [value]=\"t\" >{{ t }}</mat-option>\n            </mat-select> -->\n        </div> \n        \n        <div class =\"chart\">\n            <div echarts [options]=\"graph.option\" class=\"chart\"></div>\n        </div>\n        \n    </div>\n\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LayoutComponent } from '../shared/layout/layout.component';\nimport { AssetsHomeComponent} from './assets-home/assets-home.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LayoutComponent,\n    children: [\n      { path: '', component: AssetsHomeComponent }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AssetsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AssetsRoutingModule } from './assets-routing.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { AssetsHomeComponent } from './assets-home/assets-home.component';\nimport { NgxEchartsModule } from 'ngx-echarts';\n\nimport * as echarts from 'echarts';\nimport 'echarts/theme/macarons.js';\n// import { IMqttMessage, MqttModule, IMqttServiceOptions } from \"ngx-mqtt\";\n//  var MQTT_SERVICE_OPTIONS: IMqttServiceOptions = {\n//   hostname: '18.188.171.16',\n//   port: 9001,\n//   path: '/mqtt'\n// }\n\n@NgModule({\n  declarations: [AssetsHomeComponent],\n  imports: [\n    CommonModule,\n    AssetsRoutingModule,\n    NgxEchartsModule.forRoot({ echarts }),\n    SharedModule,\n    \n  ],\n  entryComponents: []\n})\nexport class AssetsModule { }\n"],"sourceRoot":"webpack:///"}