{"version":3,"sources":["./src/app/account/account-routing.module.ts","./src/app/account/account.module.ts","./src/app/account/change-password/change-password.component.ts","./src/app/account/change-password/change-password.component.html","./src/app/account/profile-details/profile-details.component.ts","./src/app/account/profile-details/profile-details.component.html","./src/app/account/profile/profile.component.ts","./src/app/account/profile/profile.component.html"],"names":[],"mappings":"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","file":"account-account-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProfileComponent } from './profile/profile.component';\nimport { LayoutComponent } from '../shared/layout/layout.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LayoutComponent,\n    children: [\n      { path: 'profile', component: ProfileComponent },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AccountRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AccountRoutingModule } from './account-routing.module';\nimport { ProfileComponent } from './profile/profile.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { ChangePasswordComponent } from './change-password/change-password.component';\nimport { ProfileDetailsComponent } from './profile-details/profile-details.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    AccountRoutingModule\n  ],\n  declarations: [ProfileComponent, ChangePasswordComponent, ProfileDetailsComponent],\n  exports: [ProfileComponent]\n})\nexport class AccountModule { }\n","import { NotificationService } from './../../core/services/notification.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport { NGXLogger } from 'ngx-logger';\n\nimport { AuthenticationService } from './../../core/services/auth.service';\nimport { SpinnerService } from './../../core/services/spinner.service';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.css']\n})\nexport class ChangePasswordComponent implements OnInit {\n\n  form: FormGroup;\n  hideCurrentPassword: boolean;\n  hideNewPassword: boolean;\n  currentPassword: string;\n  newPassword: string;\n  newPasswordConfirm: string;\n  disableSubmit: boolean;\n\n  constructor(private authService: AuthenticationService,\n    private logger: NGXLogger,\n    private spinnerService: SpinnerService,\n    private notificationService: NotificationService) {\n\n    this.hideCurrentPassword = true;\n    this.hideNewPassword = true;\n  }\n\n  ngOnInit() {\n    this.form = new FormGroup({\n      currentPassword: new FormControl('', Validators.required),\n      newPassword: new FormControl('', Validators.required),\n      newPasswordConfirm: new FormControl('', Validators.required),\n    });\n\n    this.form.get('currentPassword').valueChanges\n      .subscribe(val => { this.currentPassword = val; });\n\n    this.form.get('newPassword').valueChanges\n      .subscribe(val => { this.newPassword = val; });\n\n    this.form.get('newPasswordConfirm').valueChanges\n      .subscribe(val => { this.newPasswordConfirm = val; });\n\n    this.spinnerService.visibility.subscribe((value) => {\n      this.disableSubmit = value;\n    });\n  }\n\n  changePassword() {\n\n    if (this.newPassword !== this.newPasswordConfirm) {\n      this.notificationService.openSnackBar('New passwords do not match.');\n      return;\n    }\n\n    const email = this.authService.getCurrentUser().email;\n\n    this.authService.changePassword(email, this.currentPassword, this.newPassword)\n      .subscribe(\n        data => {\n          this.logger.info(`User ${email} changed password.`);\n          this.form.reset();\n          this.notificationService.openSnackBar('Your password has been changed.');\n        },\n        error => {\n          this.notificationService.openSnackBar(error.error);\n        }\n      );\n  }\n\n\n\n\n}\n","<form [formGroup]=\"form\">\n  <p>Use the form below to change your password.</p>\n\n  <div fxLayout=\"row\">\n\n    <div fxFlex=\"40%\" fxFlex.md=\"60%\" fxFlex.sm=\"50%\" fxFlex.xs=\"100%\">\n\n      <mat-form-field class=\"full-width\">\n        <input matInput placeholder=\"Current Password\" formControlName=\"currentPassword\" [type]=\"hideCurrentPassword ? 'password' : 'text'\"\n          autocomplete=\"current-password\">\n        <mat-icon matSuffix (click)=\"hideCurrentPassword = !hideCurrentPassword\">\n          {{hideCurrentPassword ? 'visibility' : 'visibility_off'}}\n        </mat-icon>\n\n        <mat-error *ngIf=\"form.controls['currentPassword'].hasError('required')\">\n          Please enter a your current password\n        </mat-error>\n      </mat-form-field>\n\n      <mat-form-field class=\"full-width\">\n        <input matInput placeholder=\"New Password\" formControlName=\"newPassword\" [type]=\"hideNewPassword ? 'password' : 'text'\" autocomplete=\"new-password\">\n        <mat-icon matSuffix (click)=\"hideNewPassword = !hideNewPassword\">\n          {{hideNewPassword ? 'visibility' : 'visibility_off'}}\n        </mat-icon>\n\n        <mat-error *ngIf=\"form.controls['newPassword'].hasError('required')\">\n          Please enter a new password\n        </mat-error>\n      </mat-form-field>\n\n      <mat-form-field class=\"full-width\">\n        <input matInput placeholder=\"Confirm New Password\" formControlName=\"newPasswordConfirm\" [type]=\"hideNewPassword ? 'password' : 'text'\"\n          autocomplete=\"new-password\">\n        <mat-icon matSuffix (click)=\"hideNewPassword = !hideNewPassword\">\n          {{hideNewPassword ? 'visibility' : 'visibility_off'}}\n        </mat-icon>\n\n        <mat-error *ngIf=\"form.controls['newPasswordConfirm'].hasError('required')\">\n          Please confirm your new password\n        </mat-error>\n      </mat-form-field>\n\n      <button mat-raised-button color=\"primary\" [disabled]=\"form.invalid || disableSubmit\" (click)=\"changePassword()\">Save</button>\n\n\n     \n    </div>\n\n  </div>\n\n</form>\n\n<!-- <div class=\"password-rules\" fxFlex=\"65%\" fxFlex.sm=\"90%\" fxFlex.xs=\"95%\">\n    Password rules:\n    <mat-list>\n      <mat-list-item>\n        Must be at least 6 characters\n      </mat-list-item>\n\n      <mat-list-item>\n        Must contain at least one non alphanumeric character\n      </mat-list-item>\n\n      <mat-list-item>\n        Must contain at least one lowercase ('a'-'z')\n      </mat-list-item>\n\n      <mat-list-item>\n        Must contain at least one uppercase ('A'-'Z')\n      </mat-list-item>\n    </mat-list>\n  </div> -->","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../../core/services/auth.service';\n\n@Component({\n  selector: 'app-profile-details',\n  templateUrl: './profile-details.component.html',\n  styleUrls: ['./profile-details.component.css']\n})\nexport class ProfileDetailsComponent implements OnInit {\n\n  fullName: string;\n  email: string;\n  alias: string;\n\n  constructor(private authService: AuthenticationService) { }\n\n  ngOnInit() {\n    this.fullName = this.authService.getCurrentUser().fullName;\n    this.email = this.authService.getCurrentUser().email;\n  }\n\n}\n","<div class=\"profile-card\">\n  <img src=\"assets/user.png\" [alt]=\"fullName\">\n\n  <h2 class=\"title\">\n    {{fullName}}\n  </h2>\n\n  <label>\n    {{alias}}\n  </label>\n\n  <label>\n    {{email}}\n  </label>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Title } from '../../../../node_modules/@angular/platform-browser';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor(private titleService: Title) { }\n\n  ngOnInit() {\n    this.titleService.setTitle('angular-material-template - Profile');\n  }\n\n}\n","<div class=\"container\" fxLayout=\"row\" fxLayoutAlign=\"center none\">\n\n  <div fxFlex=\"95%\">\n\n    <mat-card>\n      <mat-card-content>\n        <h2>My Profile</h2>\n\n        <div fxLayout=\"row\" fxLayout.sm=\"column\" fxLayout.xs=\"column\">\n\n          <div fxFlex=\"30%\" fxFlex.sm=\"95%\" fxFlex.xs=\"95%\">\n            <app-profile-details></app-profile-details>\n          </div>\n\n          <div fxFlex></div>\n\n          <div fxFlex=\"65%\" fxFlex.sm=\"95%\" fxFlex.xs=\"950%\">\n\n\n            <mat-tab-group>\n              <mat-tab label=\"Change Password\">\n                <app-change-password></app-change-password>\n              </mat-tab>\n            </mat-tab-group>\n\n\n          </div>\n\n        </div>\n      </mat-card-content>\n    </mat-card>\n  </div>\n\n\n</div>"],"sourceRoot":"webpack:///"}